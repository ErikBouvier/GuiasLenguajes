=====================
Guía de Vuetify by dM
=====================

Vuetify es una biblioteca de interfaz de usuario de Vue con componentes de
materiales bellamente hechos a mano. No se requieren habilidades de diseño: todo
lo que necesita para crear aplicaciones increíbles está al alcance de su mano.

===========
Instalación
===========

Comience con Vuetify, se requeire de el framework Vue.js, el más popular del
mundo para crear aplicaciones ricas en funciones y ultrarrápidas.

Si aún no ha creado un nuevo proyecto Vue.js usando Vue CLI, puede hacerlo
escribiendo:

Chequear la versión de Vue CLI instalada:

$ vue --version

Si no está instalada, chequear la guía de Vuejs, si está instalada, prosiga.

$ vue create my-app

Navegue hasta el directorio creado

$ cd my-app

Ahora que tiene un proyecto instanciado, puede agregar el paquete Vuetify:

$ vue add vuetify

Correr la aplicación desde un servidor de desarrollo de node

$ npm run serve

La app correra desde http://localhost:8080/

===========
Uso con CDN
===========

Para probar el uso de Vuetify sin instalar una plantilla de Vue CLI, copie el
código a continuación en su archivo index.html. Esto extraerá la última versión
de Vue y Vuetify, lo que le permitirá comenzar a jugar con los componentes.
También puedes usar el iniciador de Vuetify.

<!DOCTYPE html>
<html>
<head>
  <link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/@mdi/font@6.x/css/materialdesignicons.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.min.css" rel="stylesheet">
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, minimal-ui">
</head>
<body>
  <div id="app">
    <v-app>
      <v-main>
        <v-container>Hello world</v-container>
      </v-main>
    </v-app>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.js"></script>
  <script>
    new Vue({
      el: '#app',
      vuetify: new Vuetify(),
    })
  </script>
</body>
</html>

=================================================
Crear proyecto con Vue CLI + vue-router + Vuetify
=================================================

Chequear la versión de Vue CLI instalada:

$ vue --version

Si no está instalada, chequear la guía de Vuejs, si está instalada, prosiga.

$ vue create my-app

Le pedirá que seleccione un entorno preestablecido, seleccionar el manual, luego
le pedirá que seleccione las características necesarias para su proyecto, debe
escoger las siguientes con espacio y luego enter en la primera:

* Choose Vue version
* Babel
TypeScript
Progressive Web App (PWA) Support
* Router
Vuex
* CSS Pre-processors
* Linter / Formatter
Unit Testing
E2E Testing

Le seguirá pidiendo otras características pero ya ligadas a las selecciones
principales.

Una vez finalizado el proceso, navegue hasta el directorio creado

$ cd my-app

Ahora que tiene un proyecto instanciado, puede agregar el paquete Vuetify:

$ vue add vuetify

Correr la aplicación desde un servidor de desarrollo de node

$ npm run serve

La app correra desde http://localhost:8080/

==============================
Usar iconos de material desing
==============================

<v-icon dark>
  mdi-chevron-left
</v-icon>

Lista de íconos que se pueden usar: https://materialdesignicons.com/

===========================================================
Cambiar el color de fondo de todos los componente de la app
===========================================================

// App.vue

<template>
  <v-app>
    <v-main style="background-color: rgb(41, 31, 102);">
      <router-view/>
    </v-main>
  </v-app>
</template>

ó

<template>
  <v-app>
    <v-main class="red">
      <router-view/>
    </v-main>
  </v-app>
</template>

===============================================
Cambiar el color de fondo de un solo componente
===============================================

Para que no arrastre el color a todos los componentes, tiene que asignarse en
todos los componentes.

methods: {
  setBackground () {
    document.querySelector('.v-application').setAttribute('style', 'background-color: #ffffff')
  }
},
mounted () {
  this.setBackground()
}

=======================================
Agregar colores personalizados a un div
=======================================

// vuetify.js

import Vue from 'vue'
import Vuetify from 'vuetify/lib/framework'
import colors from 'vuetify/lib/util/colors'
// import colors from 'vuetify/es5/util/colors'

Vue.use(Vuetify)

export default new Vuetify({
  theme: {
    themes: {
      light: {
        primary: colors.red.darken1,
        colorPersonalizado: '#000000'
      }
    }
  }
})

// mi_componente.vue

<template>
  <v-container>
    <div class="colorPersonalizado">
      <v-layout>
        <router-link
          to="/home"
          Inicio
        </router-link>
      </v-layout>
    </div>
  </v-container>
</template>

==================================================
Quitar la decoración de un enlace tipo router-link
==================================================

<router-link
  to="/"
  class="blue--text"
  style="text-decoration: none; color: inherit;">
  <b>Home</b>
</router-link>

===================
Columnas en Vuetify
===================

// 2 Columnas

<v-row class="text-center">
  <v-col cols="6">
    xxxxxxxxxxxx
  </v-col>
  <v-col cols="6">
    xxxxxxxxxxxx
  </v-col>
</v-row>

// 3 Columnas

<v-row class="text-center">
  <v-col cols="4">
    xxxxxxxxxxxx
  </v-col>
  <v-col cols="4">
    xxxxxxxxxxxx
  </v-col>
  <v-col cols="4">
    xxxxxxxxxxxx
  </v-col>
</v-row>

====================
Alineación de textos
====================

<template>
  <div>
    <p class="text-left">
      Left aligned text on all viewport sizes.
    </p>
    <p class="text-center">
      Center aligned text on all viewport sizes.
    </p>
    <p class="text-right">
      Right aligned text on all viewport sizes.
    </p>

    <p class="text-sm-left">
      Left aligned text on viewports sized SM (small) or wider.
    </p>
    <p class="text-md-left">
      Left aligned text on viewports sized MD (medium) or wider.
    </p>
    <p class="text-lg-left">
      Left aligned text on viewports sized LG (large) or wider.
    </p>
    <p class="text-xl-left">
      Left aligned text on viewports sized XL (extra-large) or wider.
    </p>
  </div>
</template>

===========
Breadcrumbs
===========

Template:

<template>
  <div>
    <v-breadcrumbs :items="items"></v-breadcrumbs>

    <v-breadcrumbs
      :items="items"
      large
    ></v-breadcrumbs>
  </div>
</template>

Script:

<script>
  export default {
    data: () => ({
      items: [
        {
          text: 'Dashboard',
          disabled: false,
          href: 'breadcrumbs_dashboard',
        },
        {
          text: 'Link 1',
          disabled: false,
          href: 'breadcrumbs_link_1',
        },
        {
          text: 'Link 2',
          disabled: true,
          href: 'breadcrumbs_link_2',
        },
      ],
    }),
  }
</script>